name: ocf-util
version: 1.3.0-1
summary: Utilities for testing OCF devices
description:
  This snap installs iotivity-node and iot-rest-api-server node modules
  for testing OCF implementations using Javascript.
confinement: strict
grade: devel

apps:
  start-iot-rest-api-server:
    command: env \
      LD_LIBRARY_PATH=$SNAP/lib/node_modules/iotivity-node/iotivity-installed/lib:$LD_LIBRARY_PATH \
      NODE_PATH=$SNAP/lib/node_modules \
      node $SNAP/lib/node_modules/iot-rest-api-server/bin/iot-rest-api-server.js
    daemon: simple
    plugs: [ network-bind ]

  node:
    command: env \
      LD_LIBRARY_PATH=$SNAP/lib/node_modules/iotivity-node/iotivity-installed/lib:$LD_LIBRARY_PATH \
      NODE_PATH=$SNAP/lib/node_modules \
      node
    plugs: [ hardware-observe, home, network-bind ]

  hciconfig:
    command: bin/hciconfig
    plugs: [ bluez, bluetooth-control ]

  rfkill:
    command: usr/sbin/rfkill
    plugs: [ network-control ]

parts:
  # Part installs staging patches
  staging:
    plugin: dump
    source: src
    organize:
      staging/: usr/local/src/staging/

  # Part installs iotivity-node
  iotivity-node:
    plugin: nil
    source: https://github.com/otcshare/iotivity-node.git
    source-commit: c0e05a22725b9bd6ccc7de2c486cc52ac06e0c8f
    after: [ staging, nodejs ]
    build-packages: [ build-essential, git, scons, libtool, autoconf, valgrind, doxygen, wget, unzip, libboost-dev, libboost-program-options-dev, libboost-thread-dev, uuid-dev, libexpat1-dev, libglib2.0-dev, libsqlite3-dev, libcurl4-gnutls-dev ]
    prepare: |
      # install iotivity staging patches if any
      install -t patches $SNAPCRAFT_STAGE/usr/local/src/staging/iotivity/*
    build: |
      # build the code with the npm installed by the 'nodejs' part
      $SNAPCRAFT_STAGE/bin/npm install
    install: |
      # export the build tree under /lib/node_modules
      install -d $SNAPCRAFT_PART_INSTALL/lib/node_modules/iotivity-node
      rsync -aLm --include='*' -f 'hide,! */' . $SNAPCRAFT_PART_INSTALL/lib/node_modules/iotivity-node
    stage:
      - lib/node_modules/iotivity-node/
    prime:
      # exclude the native iotivity artifact
      - -lib/node_modules/iotivity-node/iotivity-native

  # Part imports iot-rest-api-server as a node module (source only)
  iot-rest-api-server:
    plugin: nil
    source: https://github.com/01org/iot-rest-api-server.git
    source-commit: e789b4c7eeeaacbab83b597b9200716f93aa0e35
    after: [ iotivity-node ]
    install: |
      # export the source tree under /lib/node_modules
      install -d $SNAPCRAFT_PART_INSTALL/lib/node_modules/iot-rest-api-server
      rsync -aLm --include='*' -f 'hide,! */' . $SNAPCRAFT_PART_INSTALL/lib/node_modules/iot-rest-api-server
    stage:
      - lib/node_modules/iot-rest-api-server/

  # Part installs Node.js and selected supporting modules
  nodejs:
    plugin: nodejs
    node-packages:
      # Useful node modules
      - mraa
      - noble
      - bleno
      - uuid
    filesets:
      exports:
        # ignore the following files during staging
        - -CHANGELOG.md
        - -LICENSE
        - -README.md
    stage: [ $exports ]

  # Part installs Ubuntu packages
  ubuntu:
    plugin: nil
    stage-packages:
      - rfkill          # provides /usr/sbin/rfkill
      - bluez           # provides /bin/hciconfig
